// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.headgear.web;

import com.headgear.Scores;
import com.headgear.service.api.ScoresService;
import com.headgear.web.ScoresesItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect ScoresesItemJsonController_Roo_JSON {
    
    declare @type: ScoresesItemJsonController: @RestController;
    
    declare @type: ScoresesItemJsonController: @RequestMapping(value = "/scoreses/{scores}", name = "ScoresesItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param scoresService
     */
    @Autowired
    public ScoresesItemJsonController.new(ScoresService scoresService) {
        this.scoresService = scoresService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Scores
     */
    @ModelAttribute
    public Scores ScoresesItemJsonController.getScores(@PathVariable("scores") Long id) {
        Scores scores = scoresService.findOne(id);
        if (scores == null) {
            throw new NotFoundException(String.format("Scores with identifier '%s' not found",id));
        }
        return scores;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param scores
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> ScoresesItemJsonController.show(@ModelAttribute Scores scores) {
        return ResponseEntity.status(HttpStatus.FOUND).body(scores);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param scores
     * @return UriComponents
     */
    public static UriComponents ScoresesItemJsonController.showURI(Scores scores) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(ScoresesItemJsonController.class).show(scores))
            .buildAndExpand(scores.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedScores
     * @param scores
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> ScoresesItemJsonController.update(@ModelAttribute Scores storedScores, @Valid @RequestBody Scores scores, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        scores.setId(storedScores.getId());
        scoresService.save(scores);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param scores
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> ScoresesItemJsonController.delete(@ModelAttribute Scores scores) {
        scoresService.delete(scores);
        return ResponseEntity.ok().build();
    }
    
}
