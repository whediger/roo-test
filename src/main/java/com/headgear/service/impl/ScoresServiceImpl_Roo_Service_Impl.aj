// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.headgear.service.impl;

import com.headgear.Scores;
import com.headgear.repository.ScoresRepository;
import com.headgear.service.api.ScoresService;
import com.headgear.service.impl.ScoresServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ScoresServiceImpl_Roo_Service_Impl {
    
    declare parents: ScoresServiceImpl implements ScoresService;
    
    declare @type: ScoresServiceImpl: @Service;
    
    declare @type: ScoresServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     */
    private ScoresRepository ScoresServiceImpl.scoresRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param scoresRepository
     */
    @Autowired
    public ScoresServiceImpl.new(ScoresRepository scoresRepository) {
        this.scoresRepository = scoresRepository;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param scores
     */
    @Transactional
    public void ScoresServiceImpl.delete(Scores scores) {
        scoresRepository.delete(scores);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Scores> ScoresServiceImpl.save(Iterable<Scores> entities) {
        return scoresRepository.save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ScoresServiceImpl.delete(Iterable<Long> ids) {
        List<Scores> toDelete = scoresRepository.findAll(ids);
        scoresRepository.deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Scores
     */
    @Transactional
    public Scores ScoresServiceImpl.save(Scores entity) {
        return scoresRepository.save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Scores
     */
    public Scores ScoresServiceImpl.findOne(Long id) {
        return scoresRepository.findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Scores> ScoresServiceImpl.findAll(Iterable<Long> ids) {
        return scoresRepository.findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Scores> ScoresServiceImpl.findAll() {
        return scoresRepository.findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ScoresServiceImpl.count() {
        return scoresRepository.count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Scores> ScoresServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return scoresRepository.findAll(globalSearch, pageable);
    }
    
}
